<UserControl x:Class="FlyleafLib.Controls.WPF.Flyleaf"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:FlyleafLib.Controls.WPF"
             xmlns:fl="clr-namespace:FlyleafLib.Controls.WPF;assembly=FlyleafLib"
             xmlns:properties="clr-namespace:FlyleafLib.Properties;assembly=FlyleafLib"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             
             mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="600"
             Background="Transparent">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="MainDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="local:Flyleaf">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="local:Flyleaf">
                            <ControlTemplate.Resources>
                                <ResourceDictionary>
                                    <Storyboard x:Key="fadeIn" Timeline.DesiredFrameRate="10">
                                        <DoubleAnimation BeginTime="0:0:0" Storyboard.TargetProperty="Opacity"  To="1" Duration="0:0:0.5" AutoReverse="False"/>
                                    </Storyboard>

                                    <Storyboard x:Key="fadeOut" Timeline.DesiredFrameRate="10">
                                        <DoubleAnimation BeginTime="0:0:0" Storyboard.TargetProperty="Opacity"  To="0" Duration="0:0:2.0" AutoReverse="False"/>
                                    </Storyboard>
                                </ResourceDictionary>
                            </ControlTemplate.Resources>

                            <!--CONTENT HERE-->
                            <Grid x:Name="PART_ContextMenuOwner" ContextMenu="{StaticResource PopUpMenu}">

                                <!--Pop Up Dialog (Settings/Set Values)-->
                                <materialDesign:DialogHost x:Name="PART_DialogSettings" OverlayBackground="{x:Null}"/>
                                <materialDesign:DialogHost x:Name="PART_PlaylistDialog" OverlayBackground="{x:Null}"/>
                                <local:PlaylistViewer HorizontalAlignment="Left" 
                                                      CurrentItem="{Binding Player.MediaPlaylist.Current}"
                                                      ItemsSource="{Binding Player.MediaPlaylist.Items}"
                                                      IsOpen="{Binding Player.MediaPlaylist.OpenSideView}" />
                                <!-- Error Message -->
                                <TextBlock Margin="20" VerticalAlignment="top" HorizontalAlignment="Left" TextAlignment="Left" TextWrapping="Wrap" FontSize="16" Background="{Binding Config.Video.BackgroundColor, Converter={StaticResource ColorToBrush}}" Foreground="{DynamicResource PrimaryHueMidBrush}" FontWeight="Bold" Text="{Binding ErrorMsg}"/>

                                <!--Debug Info-->
                                <fl:PlayerDebug d:Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Player="{Binding Player}" BoxColor="#AA000000" HeaderColor="White" InfoColor="{DynamicResource PrimaryHueLightBrush}" ValueColor="{DynamicResource SecondaryHueLightBrush}" Visibility="{Binding ShowDebug, Converter={StaticResource BooleanToVisibility}}"/>

                                <!--Subtitles-->
                                <TextBlock Margin="{Binding UIConfig.SubsMargin}" VerticalAlignment="Bottom" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" FontFamily="{Binding UIConfig.SubsFontFamily}" FontSize="{Binding UIConfig.SubsFontSize}" Foreground="{Binding UIConfig.SubsFontColor, Converter={StaticResource ColorToBrush}}" FontWeight="{Binding UIConfig.SubsFontWeight}" Text="{Binding Player.Subtitles.SubsText}">
                                    <TextBlock.Effect>
                                        <DropShadowEffect ShadowDepth="2" Direction="0" Color="{Binding Config.Video.BackgroundColor}" Opacity="1.0" BlurRadius="0"/>
                                    </TextBlock.Effect>
                                </TextBlock>

                                <!--Flyleaf Bar-->
                                <materialDesign:Card TextElement.FontSize="14" TextElement.FontWeight="Medium" TextElement.Foreground="White" FontFamily="{materialDesign:MaterialDesignFont}" VerticalAlignment="Bottom" Focusable="False">
                                    <materialDesign:Card.Background>
                                        <SolidColorBrush Color="{Binding Config.Video.BackgroundColor}" Opacity="0.15"/>
                                    </materialDesign:Card.Background>
                                    <materialDesign:Card.Style>
                                        <Style TargetType="{x:Type materialDesign:Card}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Idle">
                                                    <DataTrigger.EnterActions>
                                                        <RemoveStoryboard BeginStoryboardName="fadeInN" />
                                                        <BeginStoryboard x:Name="fadeOutN" Storyboard="{StaticResource fadeOut}" />
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="FullActive">
                                                    <DataTrigger.EnterActions>
                                                        <RemoveStoryboard BeginStoryboardName="fadeOutN" />
                                                        <BeginStoryboard x:Name="fadeInN" Storyboard="{StaticResource fadeIn}" />
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </materialDesign:Card.Style>

                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>

                                        <Grid Margin="15,0,15,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>

                                            <!--Current Time | Slider | Duration-->
                                            <TextBlock Grid.Column="0" HorizontalAlignment="Left"   VerticalAlignment="Center" Text="{Binding Player.CurTime, Converter={StaticResource TicksToTime}}"/>
                                            <Slider    Grid.Column="1" IsSelectionRangeEnabled="True" SelectionStart="{Binding RelativeSource={RelativeSource Self}, Path=Value, Mode=OneWay}" Style="{DynamicResource FlyleafSlider}" Focusable="False" Margin="10,0,10,0" VerticalAlignment="Center" Value="{Binding Player.CurTime, Mode=TwoWay, Converter={StaticResource TicksToSeconds}}" Maximum="{Binding Player.Duration, Converter={StaticResource TicksToSeconds}}">
                                                <Slider.SelectionEnd>
                                                    <MultiBinding Converter="{StaticResource SumConverter}">
                                                        <Binding Path="SelectionStart" RelativeSource="{RelativeSource Self}" Mode="OneWay"/>
                                                        <Binding Path="Player.BufferedDuration" Converter="{StaticResource TicksToSeconds}" Mode="OneWay"/>
                                                    </MultiBinding>
                                                </Slider.SelectionEnd>
                                            </Slider>
                                            <TextBlock Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Player.Duration, Converter={StaticResource TicksToTime}}"/>
                                        </Grid>

                                        <Grid Grid.Row="1" Margin="10,0,10,5">
                                            <Grid.Resources>
                                                <ResourceDictionary>
                                                    <Style x:Key="IconButton" TargetType="ButtonBase" BasedOn="{StaticResource MaterialDesignIconButton}">
                                                        <Setter Property="Width" Value="32"/>
                                                        <Setter Property="Height" Value="32"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                    </Style>
                                                </ResourceDictionary>
                                            </Grid.Resources>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>

                                            <!--Play / Pause Button-->
                                            <Button Grid.Column="0" Command="{Binding Player.Commands.TogglePlayPause}">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                                                        <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Play}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Player.Status}" Value="Playing">
                                                                <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Pause}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>

                                            <!-- Shuffle playlist button -->
                                            <ToggleButton Grid.Column="1" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=Shuffled}">
                                                <ToggleButton.Style>
                                                    <Style TargetType="ToggleButton" BasedOn="{StaticResource IconButton}">
                                                        <Setter Property="Content" Value="{materialDesign:PackIcon Kind=ShuffleDisabled}"/>
                                                        <Setter Property="Foreground" Value="{StaticResource MaterialDesignCheckBoxOff}"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsChecked" Value="true">
                                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                                                                <Setter Property="Content" Value="{materialDesign:PackIcon Kind=ShuffleVariant}"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>

                                            <!--Subtitles Button (Currently not used)-->
                                            <Button Command="{Binding ShowSubtitlesMenu}" x:Name="PART_ContextMenuOwner_Subtitles" Grid.Column="2" Foreground="{DynamicResource PrimaryHueMidBrush}" Content="{materialDesign:PackIcon Kind=CcOutline}">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                                                        <Setter Property="ContextMenu">
                                                            <Setter.Value>
                                                                <ContextMenu ItemsSource="{StaticResource MenuSubtitlesStreams}"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Button.Style>
                                            </Button>

                                            <!--Quality + Movies Title-->
                                            <StackPanel Grid.Column="3" Orientation="Horizontal">
                                                <Button x:Name="PART_ContextMenuOwner_Video" Command="{Binding ShowVideoMenu}">
                                                    <Button.Style>
                                                        <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                                                            <Setter Property="Content" Value=""/>
                                                            <Setter Property="ContextMenu">
                                                                <Setter.Value>
                                                                    <ContextMenu ItemsSource="{StaticResource MenuVideoStreams}"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Player.Video.Height, Converter={StaticResource QualityToLevels}}" Value="Low">
                                                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=QualityLow}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Player.Video.Height, Converter={StaticResource QualityToLevels}}" Value="Med">
                                                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=QualityMedium}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Player.Video.Height, Converter={StaticResource QualityToLevels}}" Value="High">
                                                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=QualityHigh}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Player.Video.Height, Converter={StaticResource QualityToLevels}}" Value="_4K">
                                                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Video4kBox}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                                <materialDesign:PackIcon Kind="VideoInputAntenna" Height="20" Width="20" Foreground="{DynamicResource SecondaryHueMidBrush}" VerticalAlignment="Center" Visibility="{Binding Player.IsLive, Converter={StaticResource BooleanToVisibility}}"/>
                                                <TextBlock VerticalAlignment="Center" FontStyle="Italic" Margin="5,0,0,0" Text="{Binding Player.Playlist.Selected.Title}"/>
                                            </StackPanel>

                                            <!--Volume Button (Mute/Unmute)-->
                                            <Button Grid.Column="4" Foreground="{DynamicResource PrimaryHueMidBrush}" Command="{Binding Player.Commands.ToggleMute}">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                                                        <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VolumeHigh}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Player.Audio.Volume, Converter={StaticResource VolumeToLevels}}" Value="Mute">
                                                                <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VolumeMute}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Player.Audio.Volume, Converter={StaticResource VolumeToLevels}}" Value="Low">
                                                                <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VolumeLow}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Player.Audio.Volume, Converter={StaticResource VolumeToLevels}}" Value="Med">
                                                                <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VolumeMedium}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Player.Audio.Mute}" Value="True">
                                                                <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VolumeMute}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>

                                            <!--Volume Slider (Decibel)-->
                                            <Slider Grid.Column="5" Style="{DynamicResource FlyleafSlider}" Foreground="{DynamicResource PrimaryHueMidBrush}" Focusable="False" Margin="0,0,6,6" Width="100" VerticalAlignment="Bottom" Minimum="0" Maximum="{Binding Config.Player.VolumeMax, Mode=OneWay}" Value="{Binding Player.Audio.Volume}"/>

                                            <!--Open Settings Button-->
                                            <Button Grid.Column="6" Style="{StaticResource IconButton}" Content="{materialDesign:PackIcon Kind=SettingsOutline}" Command="{Binding OpenSettings}"/>

                                            <!--Toggle Fullscreen Button-->
                                            <Button Grid.Column="7" Command="{Binding Player.Commands.ToggleFullScreen}">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                                                        <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Fullscreen}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Player.IsFullScreen}" Value="true">
                                                                <Setter Property="Content" Value="{materialDesign:PackIcon Kind=FullscreenExit}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>

                                        </Grid>
                                    </Grid>
                                </materialDesign:Card>

                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>



</UserControl>